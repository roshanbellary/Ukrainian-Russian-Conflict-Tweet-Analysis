knitr::opts_chunk$set(echo = TRUE)
install.packages("wordcloud")
install.packages("tidyverse")
install.packages("dplyr")
install.packages("RColorBrewer")
install.packages("wordcloud2")
install.packages("tidytext")
install.packages("webshot")
install.packages("htmlwidgets")
install.packages("jsonlite")
install.packages("ggmap")
install.packages("ggplot2")
install.packages("jsonlite")
install.packages("RJSONIO")
if (!require("pacman")) install.packages("pacman")
pacman::p_load_gh(
"trinker/qdapDictionaries",
"trinker/qdapRegex",
"trinker/qdapTools",
"trinker/qdap"
)
library("wordcloud")
library("RColorBrewer")
library("wordcloud2")
library("tidyverse")
library("tidytext")
library("webshot")
library("ggplot2")
library("jsonlite")
library("htmlwidgets")
library("ggmap")
library("jsonlite")
library("qdap")
library("RJSONIO")
webshot::install_phantomjs()
install.packages("dplyr")
install.packages("webshot")
swears <- c("4r5e", "5h1t", "5hit", "a55", "anal", "anus", "ar5e", "arrse", "arse", "ass", "ass-fucker", "asses", "assfucker", "assfukka", "asshole", "assholes", "asswhole", "a_s_s", "b!tch", "b00bs", "b17ch", "b1tch", "ballbag", "balls", "ballsack", "bastard", "beastial", "beastiality", "bellend", "bestial", "bestiality", "bi+ch", "biatch", "bitch", "bitcher", "bitchers", "bitches", "bitchin", "bitching", "bloody", "blow job", "blowjob", "blowjobs", "boiolas", "bollock", "bollok", "boner", "boob", "boobs", "booobs", "boooobs", "booooobs", "booooooobs", "breasts", "buceta", "bugger", "bum", "bunny fucker", "butt", "butthole", "buttmuch", "buttplug", "c0ck", "c0cksucker","carpet muncher", "cawk", "chink", "cipa", "cl1t", "clit", "clitoris", "clits", "cnut", "cock", "cock-sucker", "cockface", "cockhead", "cockmunch", "cockmuncher", "cocks", "cocksuck", "cocksucked", "cocksucker", "cocksucking", "cocksucks", "cocksuka", "cocksukka", "cok", "cokmuncher", "coksucka", "coon", "cox", "crap", "cum", "cummer", "cumming", "cums", "cumshot", "cunilingus", "cunillingus", "cunnilingus", "cunt", "cuntlick", "cuntlicker", "cuntlicking", "cunts", "cyalis", "cyberfuc", "cyberfuck", "cyberfucked", "cyberfucker", "cyberfuckers", "cyberfucking", "d1ck", "damn", "dick", "dickhead", "dildo", "dildos", "dink", "dinks", "dirsa", "dlck", "dog-fucker", "doggin", "dogging", "donkeyribber", "doosh", "duche", "dyke", "ejaculate", "ejaculated", "ejaculates", "ejaculating", "ejaculatings", "ejaculation", "ejakulate", "f u c k", "f u c k e r", "f4nny", "fag", "fagging", "faggitt", "faggot", "faggs", "fagot", "fagots", "fags", "fanny", "fannyflaps", "fannyfucker", "fanyy", "fatass", "fcuk", "fcuker", "fcuking", "feck", "fecker", "felching", "fellate", "fellatio", "fingerfuck", "fingerfucked", "fingerfucker", "fingerfuckers", "fingerfucking", "fingerfucks", "fistfuck", "fistfucked", "fistfucker", "fistfuckers", "fistfucking", "fistfuckings", "fistfucks", "flange", "fook", "fooker", "fuck", "fucka", "fucked", "fucker", "fuckers", "fuckhead", "fuckheads", "fuckin", "fucking", "fuckings", "fuckingshitmotherfucker", "fuckme", "fucks", "fuckwhit", "fuckwit", "fudge packer", "fudgepacker", "fuk", "fuker", "fukker", "fukkin", "fuks", "fukwhit", "fukwit", "fux", "fux0r", "f_u_c_k", "gangbang", "gangbanged", "gangbangs", "gaylord", "gaysex", "goatse", "God", "god-dam", "god-damned", "goddamn", "goddamned", "hardcoresex", "hell", "heshe", "hoar", "hoare", "hoer", "homo", "hore", "horniest", "horny", "hotsex", "jack-off", "jackoff", "jap", "jerk-off", "jism", "jiz", "jizm", "jizz", "kawk", "knob", "knobead", "knobed", "knobend", "knobhead", "knobjocky", "knobjokey", "kock", "kondum", "kondums", "kum", "kummer", "kumming", "kums", "kunilingus","l3i+ch")
tweets <- read.csv("war.csv")
invisible(tweets$content <- gsub("https\\S*", "", tweets$content))
invisible(tweets$content <- gsub("@\\S*", "", tweets$content))
invisible(tweets$content <- gsub("amp", "", tweets$content))
invisible(tweets$content <- gsub("[\r\n]", "", tweets$content))
invisible(tweets$content <-gsub("[[:punct:]]", "", tweets$content))
invisible(tweets$content <- rm_stopwords(tweets$content, Top200Words, strip = TRUE, separate = FALSE))
head(tweets$coordinates)
head(tweets$place,10)
tweets_words <-  tweets %>%
select(content) %>%
unnest_tokens(word, content)
words <- tweets_words %>% count(word, sort=TRUE)
set.seed(1234)
df <- data.frame(words$word,words$n)
df <- df %>% rename(word=words.word,freq=words.n)
wordcloud2(df, size=1, fontFamily="Arial", fontWeight = "bold",  color=rep_len( c("#2A2A2A","#0057B7","#DA291C"), nrow(df)),backgroundColor = "#E5E5E6")
write.csv(df,"./words.csv")
tweets <- tidyr::separate(data = tweets,
col = coordinates,
into = c("Type","Longitude", "Latitude"),
sep = ",",
remove = FALSE)
tweets$Latitude <- stringr::str_replace_all(tweets$Latitude, "[c(]", "")
tweets$Latitude <- stringr::str_replace_all(tweets$Latitude, " 'latitude': ", "")
tweets$Latitude <- stringr::str_replace_all(tweets$Latitude, "[}]", "")
tweets$Longitude <- stringr::str_replace_all(tweets$Longitude, "[)]", "")
tweets$Longitude <- stringr::str_replace_all(tweets$Longitude, " 'longitude': ", "")
tweets$Latitude <- as.numeric(tweets$Latitude)
tweets$Longitude <- as.numeric(tweets$Longitude)
tweets$place <- stringr::str_replace_all(tweets$place, "\'","")
vind <- c()
for (i in 1:length(tweets$place)){
ind <- gregexpr("country: ",tweets$place[i])
tweets$place[i]<-substr(tweets$place[i],ind,nchar(tweets$place[i])-1)
}
tweets <- tidyr::separate(data=tweets, col=place, into=c("Country","Code"),sep=",",remove=FALSE)
tweets$Country <- stringr::str_replace_all(tweets$Country, "country: ","")
bplot <- table(tweets$Emotion,tweets$Country)
bplot <- addmargins(bplot)
cplot <- bplot
bplot <- bplot[,order(bplot[6,])]
bplot <- bplot[,ncol(bplot):1]
bplot <- bplot[,2:16]
bplot <- prop.table(bplot,
margin = 2)
bplot <- 200*bplot[,]
bplot <- bplot[1:5,]
bplot <- bplot[,ncol(bplot):1]
barplot(bplot,col=c("#A13C3E","#5B3988","#EAAF24","grey","#406BAD"),xlab="Countries",ylab="Emotion Proportions",legend=TRUE)
ctr_cnt <- as.data.frame(bplot)
ctr_cnt
graph<-ggplot(data=ctr_cnt, aes(y = Var2, x=Freq, fill = Var1))+geom_col(colour="black",stat="identity")+labs(y="Country", x="Emotion Frequency(%)",title="Country Tweet Emotion Frequency")+scale_fill_manual(values=c("anger"="#A43B3D","fear"="#5B3988","joy"="#EAAF24","neutral"="gray","sadness"="#406BAD"))+guides(fill=guide_legend(title="Emotions"))+scale_x_continuous(n.breaks = 10,expand = c(0, 0)) + theme(plot.title = element_text(hjust = 0.5,face="bold"),plot.background = element_rect(fill = "#E5E5E6"),legend.background = element_rect(fill = "#E5E5E6"),panel.background=element_rect(fill="#E5E5E6",color="black"),panel.grid.major = element_blank(), panel.grid.minor = element_blank())+scale_y_discrete(limits=rev)
graph
par(bg = "#E5E5E6")
barplot(c(609,1721,115,188,233),main="Tweet Emotions",ylim=c(0,2000), names.arg=c(" "," "," "," "," "), col=c("#A13C3E","#5B3988","#EAAF24","grey","#406BAD"))
nplot <- cplot
nplot <- nplot[,order(nplot[6,])]
nplot <- nplot[,ncol(nplot):1]
nplot <- nplot[6,2:16]
twt_cnt <- as.data.frame(nplot)
twt_cnt$country <- row.names(twt_cnt)
twt_cnt <- rev(twt_cnt[order(twt_cnt$nplot),])
graph2 <- ggplot(data=twt_cnt, aes(y=country,x=nplot))+geom_bar(stat="identity")+scale_x_continuous(n.breaks = 15,expand = c(0, 0))+scale_y_discrete(limits=twt_cnt$country)+labs(y="Country", x="Tweet Count",title="Country Tweet Count")+theme(plot.title = element_text(hjust = 0.5,face="bold"),plot.background = element_rect(fill = "#E5E5E6"),panel.grid.major = element_blank(), panel.grid.minor = element_blank())
graph2
barplot(c(609,1721,115,188,233),main="Tweet Emotions",ylim=c(0,2000), names.arg=c("anger","fear","joy","neutral","sadness"), col=c("#A13C3E","#5B3988","#EAAF24","grey","#406BAD"))
ctr_cnt <- as.data.frame(bplot)
ctr_cnt
graph<-ggplot(data=ctr_cnt, aes(y = Var2, x=Freq, fill = Var1))+geom_col(colour="black",stat="identity")+labs(y="Country", x="Emotion Frequency(%)",title="Country Tweet Emotion Frequency")+scale_fill_manual(values=c("anger"="#A43B3D","fear"="#5B3988","joy"="#EAAF24","neutral"="gray","sadness"="#406BAD"))+guides(fill=guide_legend(title="Emotions"))+scale_x_continuous(n.breaks = 10,expand = c(0, 0)) + theme(plot.title = element_text(hjust = 0.5,face="bold"),plot.background = element_rect(fill = "#FFFFFF"),legend.background = element_rect(fill = "#FFFFFF"),panel.background=element_rect(fill="#FFFFFF",color="black"),panel.grid.major = element_blank(), panel.grid.minor = element_blank())+scale_y_discrete(limits=rev)
graph
